
DNS: 10.32.0.53

# pod-gateway image
image:
  tag: v1.13.0

webhook:
  image:
    pullPolicy: Always
    tag: v3.12.0
  namespaceSelector:
    custom:
      matchExpressions:
        - key: kubernetes.io/metadata.name
          operator: In
          values:
            - vpn
            - downloaders

addons:
  vpn:
    enabled: true
    type: gluetun
    gluetun:
      image:
        repository: docker.io/qmcgaw/gluetun
        tag: latest@sha256:14cc0004058f148c4b97a7f0afdfa9b2bf76bd3fd18633db94864e2c7834efad
        pullPolicy: Always

    env:
    - name: VPN_SERVICE_PROVIDER
      value: "mullvad"
    - name: VPN_TYPE
      value: "wireguard"
    - name: WIREGUARD_PRIVATE_KEY
      valueFrom:
        secretKeyRef:
          name: sealed-mullvad-wg-key
          key: WIREGUARD_PRIVATE_KEY
    - name: WIREGUARD_ADDRESSES
      valueFrom:
        secretKeyRef:
          name: sealed-mullvad-wg-key
          key: WIREGUARD_ADDRESSES
    - name: WIREGUARD_ENDPOINT_PORT
      value: "51820"
    - name: SERVER_CITIES
      value: "Atlanta GA"
    - name: DOT # dns over tls
      value: "off" # incompatible with pod-gateway resolver
    - name: DNS_KEEP_NAMESERVER # let pod-gateway manage resolv.conf
      value: "on"
    - name: BLOCK_MALICIOUS # memory intensive, so off
      value: "off"
    - name: BLOCK_SURVEILLANCE # memory intensive, so off
      value: "off"
    - name: BLOCK_ADS # not needed
      value: "off"
    - name: FIREWALL
      value: "off" # pod-gateway is handling this

    livenessProbe:
      exec:
        command:
          - sh
          - -c
          - if wget -q -O- https://am.i.mullvad.net/connected | grep -q 'You are connected to Mullvad'; then exit 0; else exit $?; fi
      initialDelaySeconds: 30
      periodSeconds: 60
      failureThreshold: 3

    networkPolicy:
      enabled: false

      # egress:
      #   - to:
      #     - ipBlock:
      #         cidr: 0.0.0.0/0
      #     ports:
      #     # VPN traffic
      #     - port: &vpn_port 51820
      #       protocol: UDP
      #   - to:
      #     - ipBlock:
      #         cidr: 1.1.1.1/32
      #     ports:
      #     - port: 53
      #       protocol: UDP
      #     - port: 53
      #       protocol: TCP
      #   - to:
      #     - ipBlock:
      #         cidr: 10.0.0.0/8
      #     - ipBlock:
      #         cidr: 192.168.0.0/16

routed_namespaces:
- vpn
- downloaders

settings:
  NOT_ROUTED_TO_GATEWAY_CIDRS: "10.0.0.0/8 192.168.0.0/16" # k8s network (pod ips, service ips) land in the low-10s. 
  
  # -- If using a VPN, interface name created by it
  VPN_INTERFACE: tun0
  # -- Prevent non VPN traffic to leave the gateway
  VPN_BLOCK_OTHER_TRAFFIC: true
  # -- If VPN_BLOCK_OTHER_TRAFFIC is true, allow VPN traffic over this port
  # VPN_TRAFFIC_PORT: *vpn_port
  VPN_TRAFFIC_PORT: 51820
  # -- Traffic to these IPs will be send through the K8S gateway
  VPN_LOCAL_CIDRS: "10.0.0.0/8 192.168.0.0/16"
  
  VXLAN_PORT: 4789
  
  IPTABLES_NFT: "no"
  
  zzNULLHACK: '$(iptables-nft -A INPUT -i eth0 -p icmp -j ACCEPT 2>/dev/null || true)'
  

# -- settings to expose ports, usually through a VPN provider.
# NOTE: if you change it you will need to manually restart the gateway POD
# publicPorts:
# - hostname: qbittorrent
#   IP: 10
#   ports:
#   - type: udp
#     port: 18289
#   - type: tcp
#     port: 18289
